<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.-->
<project basedir="." default="build" name="INTE_Roglike">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="INTE_Roglike.classpath">
        <pathelement location="bin"/>
        <pathelement location="tools/hamcrest-core-1.3.jar"/>
        <pathelement location="tools/junit-4.12.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.ucls"/>
                <exclude name="**/*.useq"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="tests">
                <exclude name="**/*.ucls"/>
                <exclude name="**/*.useq"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <src path="tests"/>
            <classpath refid="INTE_Roglike.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="CharacterTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="rougelikeLibrary.CharacterTests" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="INTE_Roglike.classpath"/>
        </junit>
    </target>
    <target name="GameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="rougelikeLibrary.GameTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="INTE_Roglike.classpath"/>
        </junit>
    </target>
    <target name="MapControllerTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="rougelikeLibrary.MapControllerTests" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="INTE_Roglike.classpath"/>
        </junit>
    </target>
    <target name="PlayerTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="rougelikeLibrary.PlayerTests" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="INTE_Roglike.classpath"/>
        </junit>
    </target>
    <target name="PositionTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="rougelikeLibrary.PositionTests" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="INTE_Roglike.classpath"/>
        </junit>
    </target>
    <target name="PositionTests.testPositionEqual">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="rougelikeLibrary.PositionTests" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="INTE_Roglike.classpath"/>
        </junit>
    </target>
    <target name="PositionTests.testPositionEqualNot">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="rougelikeLibrary.PositionTests" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="INTE_Roglike.classpath"/>
        </junit>
    </target>
    <target name="PositionTests.testPositionNotEqualWithOtherObjects">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="rougelikeLibrary.PositionTests" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="INTE_Roglike.classpath"/>
        </junit>
    </target>
    <target name="RoomCreatorTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="rougelikeLibrary.RoomCreatorTests" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="INTE_Roglike.classpath"/>
        </junit>
    </target>
    <target name="RoomTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="rougelikeLibrary.RoomTests" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="INTE_Roglike.classpath"/>
        </junit>
    </target>
    <target name="TestSuite">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="rougelikeLibrary.Testsuite" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="INTE_Roglike.classpath"/>
        </junit>
    </target>
    <target name="TurnSystemTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="rougelikeLibrary.TurnSystemTests" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="INTE_Roglike.classpath"/>
        </junit>
    </target>
    <target name="TurnSystemTests.testTurnSystemGetNewLocation">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="rougelikeLibrary.TurnSystemTests" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="INTE_Roglike.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
